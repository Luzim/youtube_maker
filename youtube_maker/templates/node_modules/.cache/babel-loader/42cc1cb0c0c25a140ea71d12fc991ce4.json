{"ast":null,"code":"import _defineProperty from \"/home/luzim/Documentos/Git/youtube_maker/youtube_maker/templates/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/luzim/Documentos/Git/youtube_maker/youtube_maker/templates/src/pages/Bitmovin.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport './Bitmovin.css';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\n\nclass BitmovinPlayer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      player: null\n    };\n    this.playerConfig = {\n      key: 'YOUR KEY HERE'\n    };\n    this.playerSource = {\n      dash: 'https://bitdash-a.akamaihd.net/content/MI201109210084_1/mpds/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.mpd',\n      hls: 'https://bitdash-a.akamaihd.net/content/MI201109210084_1/m3u8s/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.m3u8',\n      progressive: 'https://bitdash-a.akamaihd.net/content/MI201109210084_1/MI201109210084_mpeg-4_hd_high_1080p25_10mbits.mp4',\n      poster: 'https://bitdash-a.akamaihd.net/content/MI201109210084_1/poster.jpg'\n    };\n  }\n\n  componentDidMount() {\n    this.setupPlayer();\n  }\n\n  componentWillUnmount() {\n    this.destroyPlayer();\n  }\n\n  setupPlayer() {\n    const player = new bitmovin.player.Player(document.getElementById('player'), this.playerConfig);\n    player.load(this.playerSource).then(() => {\n      this.setState(_objectSpread({}, this.state, {\n        player\n      }));\n      console.log('Successfully loaded source');\n    }, () => {\n      console.log('Error while loading source');\n    });\n  }\n\n  destroyPlayer() {\n    if (this.state.player != null) {\n      this.state.player.destroy();\n      this.setState(_objectSpread({}, this.state, {\n        player: null\n      }));\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nReactDOM.render(React.createElement(BitmovinPlayer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}), document.getElementById('player-wrapper'));","map":{"version":3,"sources":["/home/luzim/Documentos/Git/youtube_maker/youtube_maker/templates/src/pages/Bitmovin.js"],"names":["React","Component","api","Progress","ToastContainer","toast","BitmovinPlayer","state","player","playerConfig","key","playerSource","dash","hls","progressive","poster","componentDidMount","setupPlayer","componentWillUnmount","destroyPlayer","bitmovin","Player","document","getElementById","load","then","setState","console","log","destroy","render","ReactDOM"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAO,gBAAP;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;;AAMI,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCM,KADmC,GAC3B;AACJC,MAAAA,MAAM,EAAE;AADJ,KAD2B;AAAA,SAInCC,YAJmC,GAIpB;AACXC,MAAAA,GAAG,EAAE;AADM,KAJoB;AAAA,SAOnCC,YAPmC,GAOpB;AACXC,MAAAA,IAAI,EAAE,uGADK;AAEXC,MAAAA,GAAG,EAAE,yGAFM;AAGXC,MAAAA,WAAW,EAAE,2GAHF;AAIXC,MAAAA,MAAM,EAAE;AAJG,KAPoB;AAAA;;AAanCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL;AACH;;AACDC,EAAAA,oBAAoB,GAAG;AACnB,SAAKC,aAAL;AACH;;AACDF,EAAAA,WAAW,GAAG;AACV,UAAMT,MAAM,GAAG,IAAIY,QAAQ,CAACZ,MAAT,CAAgBa,MAApB,CAA2BC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAA3B,EAA8D,KAAKd,YAAnE,CAAf;AACAD,IAAAA,MAAM,CAACgB,IAAP,CAAY,KAAKb,YAAjB,EAA+Bc,IAA/B,CAAoC,MAAM;AACtC,WAAKC,QAAL,mBACO,KAAKnB,KADZ;AAEIC,QAAAA;AAFJ;AAIAmB,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,KAND,EAMG,MAAM;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACH,KARD;AASH;;AACDT,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKZ,KAAL,CAAWC,MAAX,IAAqB,IAAzB,EAA+B;AAC3B,WAAKD,KAAL,CAAWC,MAAX,CAAkBqB,OAAlB;AACA,WAAKH,QAAL,mBACO,KAAKnB,KADZ;AAEIC,QAAAA,MAAM,EAAE;AAFZ;AAIH;AACJ;;AACDsB,EAAAA,MAAM,GAAG;AACL,WAAO;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AA1CkC;;AA4CvCC,QAAQ,CAACD,MAAT,CACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEIR,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAFJ","sourcesContent":["import React, {Component} from 'react';\nimport api from '../services/api';\nimport './Bitmovin.css';\nimport {Progress} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\n\n\n\n\n\n    class BitmovinPlayer extends Component {\n        state = {\n            player: null,\n        };\n        playerConfig = {\n            key: 'YOUR KEY HERE'\n        };\n        playerSource = {\n            dash: 'https://bitdash-a.akamaihd.net/content/MI201109210084_1/mpds/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.mpd',\n            hls: 'https://bitdash-a.akamaihd.net/content/MI201109210084_1/m3u8s/f08e80da-bf1d-4e3d-8899-f0f6155f6efa.m3u8',\n            progressive: 'https://bitdash-a.akamaihd.net/content/MI201109210084_1/MI201109210084_mpeg-4_hd_high_1080p25_10mbits.mp4',\n            poster: 'https://bitdash-a.akamaihd.net/content/MI201109210084_1/poster.jpg'\n        };\n        componentDidMount() {\n            this.setupPlayer();\n        }\n        componentWillUnmount() {\n            this.destroyPlayer();\n        }\n        setupPlayer() {\n            const player = new bitmovin.player.Player(document.getElementById('player'), this.playerConfig);\n            player.load(this.playerSource).then(() => {\n                this.setState({\n                    ...this.state,\n                    player\n                });\n                console.log('Successfully loaded source');\n            }, () => {\n                console.log('Error while loading source');\n            });\n        }\n        destroyPlayer() {\n            if (this.state.player != null) {\n                this.state.player.destroy();\n                this.setState({\n                    ...this.state,\n                    player: null\n                });\n            }\n        }\n        render() {\n            return <div id=\"player\" />;\n        }\n    }\n    ReactDOM.render(\n        <BitmovinPlayer/>,\n        document.getElementById('player-wrapper')\n    );"]},"metadata":{},"sourceType":"module"}