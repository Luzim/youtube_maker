{"ast":null,"code":"var _jsxFileName = \"/home/luzim/Documentos/Git/youtube_maker/youtube_maker/templates/src/pages/Upload.js\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport './Upload.css';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\n\nclass Upload extends Component {\n  //Defying state of selected file\n  constructor(props) {\n    super(props);\n\n    this.maxSelectFile = e => {\n      let files = e.target.files;\n\n      if (files.length > 1) {\n        const msg = 'Only 1 file';\n        e.target.value = null;\n        toast.warn(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = e => {\n      const file = e.target.files;\n\n      if (this.maxSelectFile(e)) {\n        this.setState({\n          selectedFile: file,\n          loaded: 0\n        });\n      }\n\n      console.log(file);\n      console.log(this.state);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log('aaaaaaaaaaaaaaaaaaaaaa');\n      const data = new FormData();\n      data.append('file', this.state.selectedFile[0]);\n      console.log(data);\n      api.post('/upload', data, {\n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        }\n      }).then(res => {\n        toast.success('Success');\n      }).catch(err => {\n        toast.error('Fail');\n      });\n    };\n\n    this.state = {\n      selectedFile: null,\n      loaded: 0\n    };\n  } //Verifying if user send 1 file to upload\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-group files\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Progress, {\n      max: \"100\",\n      color: \"success\",\n      value: this.state.loaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, Math.round(this.state.loaded, 2), \"%\")), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Send Your File\")));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/luzim/Documentos/Git/youtube_maker/youtube_maker/templates/src/pages/Upload.js"],"names":["React","Component","api","Progress","ToastContainer","toast","Upload","constructor","props","maxSelectFile","e","files","target","length","msg","value","warn","handleChange","file","setState","selectedFile","loaded","console","log","state","handleSubmit","preventDefault","data","FormData","append","post","onUploadProgress","ProgressEvent","total","then","res","success","catch","err","error","render","Math","round"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport api from '../services/api';\nimport './Upload.css';\nimport {Progress} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nclass Upload extends Component{\n    //Defying state of selected file\n    constructor(props){\n        super(props)\n        this.state = {\n            selectedFile: null,\n            loaded:0\n        }\n    }\n    //Verifying if user send 1 file to upload\n    maxSelectFile=(e)=>{\n        let files = e.target.files;\n        if(files.length > 1){\n            const msg = 'Only 1 file';\n            e.target.value = null;\n            toast.warn(msg)\n            return false;\n        }\n        return true;\n    }\n\n    handleChange=e=>{\n        const file = e.target.files\n        if(this.maxSelectFile(e)){\n            this.setState({\n                selectedFile:file,\n                loaded: 0\n            })\n\n        }\n        console.log(file)\n        console.log(this.state)\n    }\n    handleSubmit=(e)=>{\n        e.preventDefault();\n        console.log('aaaaaaaaaaaaaaaaaaaaaa');\n        const data = new FormData();\n        data.append('file', this.state.selectedFile[0]);\n        console.log(data);\n        api.post('/upload', data,{\n            onUploadProgress: ProgressEvent => {\n                this.setState({\n                    loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n                })\n            },             \n        })\n        .then( res => {\n            toast.success('Success');\n        })\n        .catch(err => {\n            toast.error('Fail');\n        })\n    }\n\n    render(){\n        return (\n            \n            <div className= \"login-container\">\n                \n                <form className=\"form-group files\" onSubmit={this.handleSubmit} >\n                    <input\n                        type=\"file\"\n                        multiple onChange={this.handleChange}                        \n                        />\n                    <div >\n                        <ToastContainer />\n                        <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>\n        \n                    </div>\n                     \n                    <button type=\"submit\" >Send Your File</button> \n                </form>            \n            </div>\n          \n        );\n    }\n}\nexport default Upload;"]},"metadata":{},"sourceType":"module"}