{"ast":null,"code":"var _jsxFileName = \"/home/luzim/Documentos/Git/youtube_maker/youtube_maker/templates/src/pages/Upload.js\";\nimport React, { Component } from 'react';\nimport api from '../services/api';\nimport './Upload.css';\nimport { Progress } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\n\nclass Upload extends Component {\n  //Defying state of selected file\n  constructor(props) {\n    super(props);\n\n    this.maxSelectFile = e => {\n      let files = e.target.files;\n\n      if (files.length > 1) {\n        const msg = 'Only 1 file';\n        e.target.value = null;\n        toast.warn(msg);\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = e => {\n      var file = e.target.files;\n\n      if (this.maxSelectFile(e)) {\n        this.setState({\n          selectedFile: file,\n          loaded: 0\n        });\n      }\n    };\n\n    this.handleSubmit = () => {\n      console.log('aaaaaaaaa', this.state.selectedFile);\n      const data = new FormData();\n      data.append(\"file\", this.state.selectedFile[0]);\n      console.log(data);\n      api.post('/upload', data, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: ProgressEvent => {\n          this.setState({\n            loaded: ProgressEvent.loaded / ProgressEvent.total * 100\n          });\n        }\n      }).then(res => {\n        toast.success('Success');\n      }).catch(err => {\n        toast.error('Fail');\n      });\n    };\n\n    this.state = {\n      selectedFile: [],\n      loaded: 0\n    };\n  } //Verifying if user send 1 file to upload\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Upload Your File \"), React.createElement(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(ToastContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Progress, {\n      max: \"100\",\n      color: \"success\",\n      value: this.state.loaded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, Math.round(this.state.loaded, 2), \"%\")), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Upload\"))));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["/home/luzim/Documentos/Git/youtube_maker/youtube_maker/templates/src/pages/Upload.js"],"names":["React","Component","api","Progress","ToastContainer","toast","Upload","constructor","props","maxSelectFile","e","files","target","length","msg","value","warn","handleChange","file","setState","selectedFile","loaded","handleSubmit","console","log","state","data","FormData","append","post","headers","onUploadProgress","ProgressEvent","total","then","res","success","catch","err","error","render","onChangeHandler","Math","round","onClickHandler"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport api from '../services/api';\nimport './Upload.css';\nimport {Progress} from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nclass Upload extends Component{\n    //Defying state of selected file\n    constructor(props){\n        super(props)\n        this.state = {\n            selectedFile: [],\n            loaded:0\n        }\n    }\n    //Verifying if user send 1 file to upload\n    maxSelectFile=(e)=>{\n        let files = e.target.files;\n        if(files.length > 1){\n            const msg = 'Only 1 file';\n            e.target.value = null;\n            toast.warn(msg)\n            return false;\n        }\n        return true;\n    }\n\n    handleChange=e=>{\n        var file = e.target.files\n        if(this.maxSelectFile(e)){\n            this.setState({\n            selectedFile: file,\n            loaded: 0\n            })\n        }\n    }\n    handleSubmit=()=>{\n        \n        console.log('aaaaaaaaa',this.state.selectedFile);\n        const data = new FormData();\n        data.append(\"file\", this.state.selectedFile[0]);\n        console.log(data);\n        api.post('/upload', data,{\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            },\n            onUploadProgress: ProgressEvent => {\n                this.setState({\n                    loaded: (ProgressEvent.loaded / ProgressEvent.total*100),\n                })\n            },             \n        })\n        .then( res => {\n            toast.success('Success');\n        })\n        .catch(err => {\n            toast.error('Fail');\n        })\n        \n    }\n\n    render(){\n        return (\n            \n            <div >\n            <div >\n              <div >\n                 <div >\n                  <label>Upload Your File </label>\n                  <input type=\"file\" multiple onChange={this.onChangeHandler}/>\n                </div>  \n                <div >\n                <ToastContainer />\n                <Progress max=\"100\" color=\"success\" value={this.state.loaded} >{Math.round(this.state.loaded,2) }%</Progress>\n          \n                </div> \n                \n                <button type=\"button\" onClick={this.onClickHandler}>Upload</button>\n  \n            </div>\n        </div>\n        </div>\n          \n        );\n    }\n}\nexport default Upload;"]},"metadata":{},"sourceType":"module"}